// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Test {
  id        Int        @id @default(autoincrement())
  summary   String
  sections  Section[]
  questions Question[]
}

model Section {
  id          Int          @id @default(autoincrement())
  summary     String
  test        Test         @relation(fields: [testId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  testId      Int
  number      Int
  subSections SubSection[]
  questions   Question[]
}

model SubSection {
  id             Int             @id @default(autoincrement())
  summary        String
  section        Section         @relation(fields: [sectionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sectionId      Int
  number         Int
  subSubSections SubSubSection[]
  questions      Question[]
}

model SubSubSection {
  id           Int        @id @default(autoincrement())
  summary      String
  number       Int
  subSection   SubSection @relation(fields: [subSectionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  subSectionId Int
  questions    Question[]
}

model Question {
  id              Int            @id @default(autoincrement())
  number          Int
  question        String
  answer          String
  SubSection      SubSection?    @relation(fields: [subSectionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  subSectionId    Int?
  subSubSection   SubSubSection? @relation(fields: [subSubSectionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  subSubSectionId Int?
  section         Section?       @relation(fields: [sectionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sectionId       Int?
  Test            Test?          @relation(fields: [testId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  testId          Int?
}
